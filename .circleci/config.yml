version: 2.1

executors:
  gcloud:
    working_directory: /home/circleci/project
    docker:
      - image: google/cloud-sdk
    environment:
      TZ: Asia/Tokyo
  android-build:
    working_directory: /home/circleci/project
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      TZ: Asia/Tokyo
      _JAVA_OPTIONS: -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
      GRADLE_OPTS: -Xmx4g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=\"-Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\"
commands:
  internal-checkout:
    steps:
      - checkout
      - run:
          name: generate-cache-key
          command: |
            echo "${CIRCLE_SHA1}-${CIRCLE_BRANCH:-nil}-${CIRCLE_TAG:-nil}-`date "+%Y%m%d"`" > .cachekey
            cat .cachekey
  module-checkout:
    parameters:
      module:
        type: string
    steps:
      - internal-checkout
      - restore_cache:
          key: configs-{{ checksum ".cachekey" }}
      - restore_cache:
          key: gradle{{ checksum ".circleci/config.yml" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "<< parameters.module >>/build.gradle.kts" }}
  module-save-cache:
    parameters:
      module:
        type: string
    steps:
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.m2
          key: gradle{{ checksum ".circleci/config.yml" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "<< parameters.module >>/build.gradle.kts" }}
jobs:
  configure:
    executor:
      name: android-build
    steps:
      - internal-checkout
      - run:
          name: snapshot-build-number
          command: |
            echo "$CIRCLE_BUILD_NUM" > .configs/secrets/build-number.env
      - save_cache:
          paths:
            - .configs/secrets
          key: configs-{{ checksum ".cachekey" }}
  ##############################################
  # unit-test in parameters.module
  ##############################################
  local-unit-test:
    parameters:
      module:
        type: string
      localTestTask:
        type: string
        default: testDebug
      instrumentationTestTask:
        type: string
        default: assembleAndroidTest
      lintTask:
        type: string
        default: lintDebug
      formatTask:
        type: string
        default: format
    executor:
      name: android-build
    steps:
      - module-checkout:
          module: << parameters.module >>
      - run:
          name: local-test
          command: ./gradlew ":<< parameters.module >>:<< parameters.localTestTask >>"
      - run:
          name: instrumentation
          command: ./gradlew ":<< parameters.module >>:<< parameters.instrumentationTestTask >>"
      - run:
          name: lint
          command: ./gradlew ":<< parameters.module >>:<< parameters.lintTask >>"
      - run:
          name: format
          command: |
            ./gradlew ":<< parameters.module >>:<< parameters.formatTask >>"
            if [ "`git status | grep '.kt'`" != "" ]; then
              echo "kotlin format error."
              echo "run -> ./gradlew format"
              exit 1
            fi
      - store_artifacts:
          destination: archive-artifacts
          path: <<parameters.module>>/build/reports/
      - store_test_results:
          destination: archive-test-artifacts
          path: <<parameters.module>>/build/test-results/
      - module-save-cache:
          module: << parameters.module >>
      - run:
          name: deploy
          command: ./gradlew ":<< parameters.module >>:bintrayUpload"
aliases:
  - &depends-from-tests
    requires:
      - configure
  - &filter-for-assemble
    filters:
      branches:
        only:
          - /^v[0-9].*/
          - /^feature\/id\/.*/
      tags:
        only:
          - /^v[0-9].*/
workflows:
  assemble-flow:
    jobs:
      - configure:
          <<: *filter-for-assemble
      ##############################################
      # tests in army-knife
      ##############################################
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife
          name: army-knife-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-android-junit4
          name: army-knife-android-junit4-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-camera
          name: army-knife-camera-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-gms
          name: army-knife-gms-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-junit
          name: army-knife-junit-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-persistence
          name: army-knife-persistence-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-reactivex
          name: army-knife-reactivex-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-timber
          name: army-knife-timber-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: army-knife-widgets
          name: army-knife-widgets-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm
          name: firearm-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm-channel
          name: firearm-channel-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm-di
          name: firearm-di-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm-event
          name: firearm-event-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm-material-resources
          name: firearm-material-resources-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm-persistence
          name: firearm-persistence-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: firearm-rpc
          name: firearm-rpc-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: kerberus
          name: kerberus-test
      - local-unit-test:
          <<: *filter-for-assemble
          <<: *depends-from-tests
          module: oneshotlivedata
          name: oneshotlivedata-test
# EOF
