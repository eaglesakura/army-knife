/**
 * 0.1.x  : playground-version.
 */
def ARTIFACT_VERSION = System.env.CIRCLE_TAG == null ?
        "0.1" : System.env.CIRCLE_TAG.substring(System.env.CIRCLE_TAG.indexOf('v') + 1)
def BINTRAY_LABELS = ["android", "kotlin"]

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

dependencies {
    /**
     * java libraries
     */
    api project(':oneshotlivedata')
    api 'com.eaglesakura:garnet:1.2.2'   // Dependency Injection
    api 'io.reactivex.rxjava2:rxkotlin:2.2.0'   // Reactive Extension
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'   // Reactive Extension

    /**
     * Kotlin support
     */
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.5'

    /**
     * Support Libraries
     * https://developer.android.com/topic/libraries/architecture/adding-components
     * https://developer.android.com/topic/libraries/support-library/refactor
     */
    api 'androidx.core:core-ktx:1.0.0-beta01'
    api 'androidx.sqlite:sqlite:2.0.0-beta01'
    api 'androidx.sqlite:sqlite-ktx:2.0.0-beta01'
    api 'androidx.collection:collection-ktx:1.0.0-beta01'
    api 'androidx.fragment:fragment-ktx:1.0.0-beta01'
    api 'androidx.appcompat:appcompat:1.0.0-beta01'
    api "androidx.lifecycle:lifecycle-extensions:2.0.0-beta01"
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0-beta01'
    implementation 'androidx.multidex:multidex:2.0.0'
    androidTestImplementation 'androidx.multidex:multidex-instrumentation:2.0.0'
    api 'com.google.android.material:material:1.0.0-beta01' // Material components

    /**
     * Google Play Services
     */
    api 'com.google.android.gms:play-services-auth:15.0.1'

    /**
     * Firebase
     */
    api 'com.google.firebase:firebase-core:16.0.1'
    api 'com.google.firebase:firebase-auth:16.0.2'
    api 'com.google.firebase:firebase-config:16.0.0'

    /**
     * http
     */
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    /**
     * for Tests
     */
    testImplementation project(':army-knife-junit')
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'androidx.test:monitor:1.1.0-alpha4'

    /**
     * for Android Tests
     */
    androidTestImplementation project(':army-knife-junit')
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

android {
    compileSdkVersion 28

    // for *.java options
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // for Kotlin-Android
    androidExtensions {
        experimental = true
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        multiDexEnabled true
        aaptOptions.cruncherEnabled false
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}

static def getArtifactVersionSuffix() {
    String CIRCLE_TAG = System.env.CIRCLE_TAG

    if (CIRCLE_TAG != null) {
        // have CIRCLE_TAG(build on CircleCI)
        return ""
    }

    if (System.env.CIRCLE_BUILD_NUM != null) {
        return ".build-${System.env.CIRCLE_BUILD_NUM}"
    } else {
        return ".snapshot"
    }
}

group = "com.eaglesakura"
version = ARTIFACT_VERSION + getArtifactVersionSuffix()

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

bintray {
    user = 'eaglesakura'
    key = System.env.BINTRAY_API_KEY
    publish = true
    override = true
    pkg {
        repo = "maven"
        name = file(".").absoluteFile.name
        vcsUrl = System.env.CIRCLE_REPOSITORY_URL
        licenses = ["MIT"]
        labels = BINTRAY_LABELS
        version {
            name = project.version
            released = new Date()
            gpg {
                sign = true
                passphrase = System.env.BINTRAY_GPG_PASS
            }
        }
    }
    configurations = ['archives']
}